
# .github/workflows/deploy-ecs.yml

name: Build and Deploy to ECS

on:
  push:
    branches:
      - main  # Adjust as needed

env:
  AWS_REGION: us-east-1                       # ✅ Update to your region
  ECR_REPOSITORY: demo-app                    # ✅ Your ECR repo name
  ECS_CLUSTER: my-ecs-cluster                 # ✅ Your ECS cluster name
  ECS_SERVICE: demo-service                   # ✅ Your ECS service name
  CONTAINER_NAME: demo-container              # ✅ Must match your ECS container name
  TASK_DEF_FILE: ecs-task-def.json            # ✅ ECS task definition path

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: ./mvnw clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Debug IMAGE_URI
        run: echo "${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"

      - name: Build, tag, and push Docker image to ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Render ECS task definition with updated image
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DEF_FILE }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URI }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          wait-for-service-stability: true
